#!/bin/bash
# This is the top level compile farm script. Run it in the compile
# farm directory.  It requires the following files:
#
# sysname  - contains a short system name
# slot     - contains the slot number
# trees    - contains paths to the CVS checkouts that are to be tested
#
# The script prints some messages to $LOGFILE, or stdout if
# $LOGFILE is undefined

# Function to write a message to $LOGFILE or stdout

function MSG {
    if [ -z $LOGFILE ] ; then 
        echo `date -u "+%F %T run_farm: $1"`
    else
        date -u "+%F %T run_farm: $1" >>$LOGFILE
    fi
}

# main script starts here

# comment out for results to stdout
export LOGFILE=`pwd`/farm_log

# check requirements
if [ ! -f sysname  ] ; then
    echo "sysname: file not found"
    exit -1
fi
if [ ! -f slot  ] ; then
    echo "slot: file not found"
    exit -1
fi
if [ ! -f trees ] ; then
    echo "trees: file not found"
    exit -1
fi
MSG "START"
while true ; do
    if ./check_commit ; then
        # are we supposed to update the clock?
        if [ -f ntpserver ] ; then
            # is ntpdate installed?
            if type ntpdate >/dev/null ; then
                # set the clock
                # NOTE: this will hang if sudo needs a password
                # to run ntpdate.  see README for details
                sudo ntpdate `cat ntpserver` >/dev/null
            fi
        fi
        TREES=`cat trees`
        for TREE in $TREES ; do
            if ./check_cvs $TREE ; then
                LAST_RESULT=`tail -n 1 $TREE/history_log | cut -d " " -f 3`
                if ./build $TREE ; then
                    # passed: post on web
                    ./results_web $TREE PASS
                    # post on IRC and list only if previous attempt failed
                    if [ ! "$LAST_RESULT" = "PASSED" ] ; then
                        ./results_cia $TREE PASS
                        ./results_list $TREE PASS
                    fi
                else
                    # failed: post on web, IRC, and list
                    ./results_web $TREE FAIL
                    ./results_cia $TREE FAIL
                    ./results_list $TREE FAIL
                fi
            fi
	done
	MSG "done, sleeping"
    else
        sleep 300
    fi
done
exit 0

