# Compile farm build script for EMC1
#
# platform specific info
#
USRPLAT=linux
#
# Even although the realtime dependant parts of EMC1
# will compile on a 2.6 kernel, nonrealtime sim and
# (most) of the user space parts will.
#
echo
echo "changing to emc/src"
cd src 
#
# all make commands are wrapped with "if" so that a
# failed command will terminate the entire build
#
echo
echo "running \"make clean PLAT=$USRPLAT\"" 
echo
if ! ( make clean PLAT=$USRPLAT ) ; then exit 1 ; fi
echo
echo "running \"make clean PLAT=REALTIME\"" 
echo
echo "\"make clean PLAT=REALTIME\" failed." 
echo
echo "running \"make make_dirs PLAT=$USRPLAT\"" 
echo
if ! ( make make_dirs PLAT=$USRPLAT ) ; then exit 1 ; fi
echo
echo "running \"make make_dirs PLAT=REALTIME\"" 
echo
echo "\"make make_dirs PLAT=REALTIME\" failed." 
echo
echo "running \"make headers PLAT=$USRPLAT\"" 
echo
if ! ( make headers PLAT=$USRPLAT ) ; then exit 1 ; fi
echo
echo "running \"make headers PLAT=REALTIME\"" 
echo
echo "\"make headers  PLAT=REALTIME\" failed." 
echo
echo "running \"make depend PLAT=$USRPLAT\"" 
echo
if ! ( make depend PLAT=$USRPLAT ) ; then exit 1 ; fi
echo
echo "running \"make depend PLAT=REALTIME\"" 
echo
echo "\"make depend  PLAT=REALTIME\" failed." 
echo
echo "running \"make all PLAT=$USRPLAT\"" 
echo
if ! ( make all PLAT=$USRPLAT ) ; then exit 1 ; fi
echo
echo "running \"make all PLAT=REALTIME\"" 
echo
echo "\"make all  PLAT=REALTIME\" failed." 
echo
#
# The realtime code failed, but the user space libs should have 
# compiled by the time we get here. Still don't want people thinking
# they can run EMC1 on a 2.6 kernel, so flag a fail regardless.
#

echo "No realtime code compiled. Only sim and some user space applications succeeded." 
exit 1
