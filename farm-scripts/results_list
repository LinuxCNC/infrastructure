#!/bin/bash
#
# usage: results_list <build_dir> PASS|FAIL
#
# This script is passed the name of a directory that contains
# a build log (as generated by check_build) and the result of
# that build (PASS or FAIL).  It assumes that the build log was
# already uploaded (by results_web), and generates an email to
# the emc-commit mailing list reporting the result of the build.
#
# It assumes that the file "sysname" contains a short system
# name and "slot" contains the slot number.
#
# The script prints some messages to $LOGFILE, or stdout if
# $LOGFILE is undefined

# Function to write a message to $LOGFILE or stdout

function MSG {
    if [ -z $LOGFILE ] ; then 
        echo `date -u "+%F %T results_list: $BUILD_DIR : $1"`
    else
        date -u "+%F %T results_list: $BUILD_DIR : $1" >>$LOGFILE
    fi
}

# Function to send an email from a file
#
# usage  EMAIL <srcname>
#
# srcname is the name of a file containing the following:
#
# From: <sender>
# To: <recipient>
# Subject: <subject>
#
# body
# more body
#
# Other header lines are permitted, the blank line marks the end of
# the headers and the beginning of the body (this is standard unix
# mail stuff, but I'm accustomed to using mail clents and not seeing
# it, so I'm documenting it here)
#
# The function uses esmtp, and any output from it is captured to
# esmtp_log (handy for troubleshooting)
#
function EMAIL {
    SRCFILE=$1
    # first remove any old esmtp_log file that is laying around
    rm -f esmtp_log
    MSG "mailing $SRCFILE"
    # start a subshell, enable job control
    ( set -m
    # start a "watchdog timer" in the background, save its pid
    sleep 120 & timerpid=$!
    # invoke esmtp to send the message, kill watchdog on completion, run in background
    ( esmtp -t <$SRCFILE 1>>esmtp_log 2>>esmtp_log && echo "ESMTP_SUCCESS" >>esmtp_log ; kill $timerpid ) &
    # wait for timeout (or for esmtp to finish and kill the timer, which normally happens)
    wait $timerpid
    # if the esmtp job is still going, kill it
    kill %+
    # end subshell, discard job completion notification messages
    ) 2>/dev/null
    # check log to see if scp succeeded
    if grep -q ESMTP_SUCCESS esmtp_log ; then 
        return 0
    else
        MSG "mail failed"
        return -1
    fi
    }


# main script starts here

if [ -z $1 ] ; then
    MSG "no directory specified"
    exit -1
fi
BUILD_DIR=$1
BUILD_NAME=`echo $BUILD_DIR | sed s#^.*/##`
if [ ! -f sysname  ] ; then
    MSG "sysname: file not found"
    exit -1
else
    SYSNAME="`cat sysname` (`uname -r`)"
fi
if [ ! -f slot  ] ; then
    MSG "slot: file not found"
    exit -1
else
    SLOT=`cat slot`
fi
if [ -z $2 ] ; then
    MSG "no result specified"
    exit -1
fi
RESULT=$2
if [ "$RESULT" = "PASS" ] ; then
    IMAGE=pass.png
    ALTTEXT=PASSED
elif [ "$RESULT" = "FAIL" ] ; then
    IMAGE=fail.png
    ALTTEXT=FAILED
else
    MSG "$RESULT: invalid result specified"
    exit -1
fi
# create email message
echo "From: EMC compile farm <jmkasunich@linuxcnc.org>" >list.msg
#echo "To: emc-commit@lists.sourceforge.net" >>list.msg
echo "To: jmkasunich@att.net" >>list.msg
echo "Subject: $RESULT: $BUILD_NAME on $SYSNAME" >>list.msg
echo "" >>list.msg
echo "Compile farm build of $BUILD_NAME on $SYSNAME ${RESULT}ED" >>list.msg
echo "Build log is at http://linuxcnc.org/compile_farm/${BUILD_NAME}_slot${SLOT}_log.txt" >>list.msg
echo "Complete compile farm results at http://linuxcnc.org/compile_farm/index.shtml" >>list.msg
echo "" >>list.msg

MAIL list.msg
