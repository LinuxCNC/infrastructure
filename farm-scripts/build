#!/bin/bash
#
# usage: build <build_dir>
#
# This script is passed the name of a directory that contains
# a cvs checkout.  It switches to that directory and looks for a
# script called 'farm_build'.  It executes that script, saving
# all output in 'build_log', and returns success or or failure
# based on the result.
#
# The script prints some messages to $LOGFILE, or stdout if
# $LOGFILE is undefined

# Function to write a message to $LOGFILE or stdout

function MSG {
    if [ -z $LOGFILE ] ; then
        echo `date -u "+%F %T build: $BUILD_DIR : $1"`
    else
        date -u "+%F %T build: $BUILD_DIR : $1" >>$LOGFILE
    fi
}

# main script starts here

if [ -z $1 ] ; then
    MSG "no directory specified"
    exit -1
fi
BUILD_DIR=$1
BUILD_NAME=`echo $BUILD_DIR | sed s#^.*/##`
if [ ! -f sysname  ] ; then
    MSG "sysname: file not found"
    exit -1
else
    SYSNAME="`cat sysname` (`uname -r`)"
fi
if [ ! -f slot  ] ; then
    MSG "slot: file not found"
    exit -1
else
    SLOT=`cat slot`
fi
if [ ! -d $BUILD_DIR  ] ; then
    MSG "no such directory"
    exit -1
fi
OLD_DIR=`pwd`
cd $BUILD_DIR 
if [ ! -f farm_build ] ; then
    MSG "farm_build: file not found"
    exit -1
fi
# should we do "make clean; make", or just "make" ?
BUILD_TYPE=incremental
if [ ! -f last_complete ] ; then
  # no record of last complete build, force one
  BUILD_TYPE=complete
  MSG "last_complete missing"
else
  AGE=$(($(date +%s)-$(cat last_complete)))
  if [ $(($AGE>43200)) -eq 1 ] ; then
    BUILD_TYPE=complete
    MSG "12 hours since last complete build"
  fi
fi
if [ $BUILD_TYPE = complete ] ; then
  # update last complete build timestamp
  date +%s >last_complete
fi
# get started
MSG "start $BUILD_TYPE build"
# make a header for the build log
echo >build_log
echo "BUILD : $BUILD_NAME " >>build_log
echo "SYSTEM: $SYSNAME (slot $SLOT)" >>build_log
echo >>build_log
date -u +"$BUILD_TYPE build started at %F %T" >>build_log
echo >>build_log
# do the build
if ./farm_build $BUILD_TYPE 1>>build_log 2>>build_log; then
    # succeeded
    echo >>build_log
    date -u +"$BUILD_TYPE build successfull at %F %T" >>build_log
    echo >>build_log
    date -u +"%F %T PASSED ($BUILD_TYPE build)" >>history_log
    MSG "succeeded"
    exit 0
else
    # failed
    echo >>build_log
    date -u +"$BUILD_TYPE build failed at %F %T" >>build_log
    echo >>build_log
    date -u +"%F %T FAILED ($BUILD_TYPE build)" >>history_log
    MSG "failed"
    exit -1
fi

